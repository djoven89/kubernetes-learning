# Crea otro pod llamado cli-mysql cuya imagen sea mysql:8.0, monta los secrets: secret-db-test-conf y secret-db-test-name como volúmenes de sólo lectura,
# conéctate a la base de datos del pod db-test usando los secrets montados e inserta las siguientes sentencias SQL usando los secrets montados.
#    CREATE TABLE cursos (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50));
#    INSERT INTO cursos (name) VALUES ('CKAD');

###
# CLI
###

# kubectl run cli-mysql --image mysql:8.0 --dry-run -o yaml
# kubectl get pods -o wide
# kubectl describe pods cli-mysql
# kubectl exec -ti cli-mysql -- sh -c 'env && ls -laR /opt/'

# echo -n "CREATE TABLE cursos (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50));\nINSERT INTO cursos (name) VALUES ('CKAD');" > /tmp/lab-4.sql
# kubectl cp /tmp/lab-4.sql cli-mysql:/tmp/

# kubectl get pods -o wide db-test
# kubectl exec -ti cli-mysql -- sh -c 'mysql -h 10-244-2-13.default.pod.cluster.local -u $(cat /opt/.db-conf/APP_DBA_USERNAME) -p$(cat /opt/.db-conf/APP_DBA_PWD) $(cat /opt/.db-name/APP_DB_NAME) < /tmp/lab-4.sql'
# kubectl exec -ti cli-mysql -- sh -c 'mysql -h 10-244-2-13.default.pod.cluster.local -u $(cat /opt/.db-conf/APP_DBA_USERNAME) -p$(cat /opt/.db-conf/APP_DBA_PWD) $(cat /opt/.db-name/APP_DB_NAME) -e "SHOW TABLES; SELECT * FROM cursos;"'

###
# YAML
###

apiVersion: v1
kind: Pod
metadata:
  labels:
    run: cli-mysql
  name: cli-mysql
spec:
  containers:
  - image: mysql:8.0
    name: cli-mysql
    env:
      - name: MYSQL_ROOT_PASSWORD
        value: 'r00!'
    volumeMounts:
      - name: db-conf
        mountPath: /opt/.db-conf
        readOnly: true
      - name: db-name
        mountPath: /opt/.db-name
        readOnly: true
    resources: {}
  restartPolicy: Always
  volumes:
  - name: db-conf
    secret:
      secretName: secret-db-test-conf
  - name: db-name
    secret:
      secretName: secret-db-test-name
